import pathlib

import tkinter as tk
import tkinter.ttk as ttk
from tkinter.scrolledtext import ScrolledText

PROJECT_PATH = pathlib.Path(__file__).parent
PROJECT_UI = PROJECT_PATH / "a.ui"


class AApp:
    def __init__(self, master=None):
        # build ui
        self.toplevel1 =tk.Tk() if master is None else tk.Toplevel(master)
        self.frame3 = tk.Frame(self.toplevel1)
        self.__tkvar = tk.StringVar(value='File')
        self.a__tkvar = tk.StringVar(value='Help')
        __values = []
        self.optionmenu1 = tk.OptionMenu(self.frame3, self.__tkvar, 'File', *__values, command=None)
        self.optionmenu1.pack(side='left')
        a__values = []
        self.optionmenu2 = tk.OptionMenu(self.frame3, self.a__tkvar, 'Help', *a__values, command=None)
        self.optionmenu2.pack(side='left')
        self.frame3.configure(background='#f4f4f4', borderwidth='2', height='200', relief='flat')
        self.frame3.configure(takefocus=True, width='200')
        self.frame3.place(anchor='nw', relwidth='1.0', relx='0.0', x='0', y='0')
        self.frame7 = tk.Frame(self.toplevel1)
        self.frame8 = tk.Frame(self.frame7)
        self.DataEntryLabel = tk.Label(self.frame8)
        self.DataEntryLabel.configure(compound='top', font='{Arial Greek} 10 {bold}', justify='left', text='Data Entry')
        self.DataEntryLabel.place(anchor='nw', relx='0.0', rely='0.0', x='100', y='20')
        self.RunTitle_Label = tk.Label(self.frame8)
        self.RunTitle_Label.configure(compound='top', cursor='arrow', font='{Arial Greek} 9 {}', justify='left')
        self.RunTitle_Label.configure(takefocus=False, text='Run Title ')
        self.RunTitle_Label.place(anchor='nw', relx='0.0', y='50')
        self.React_1_Label = tk.Label(self.frame8)
        self.React_1_Label.configure(compound='top', font='{Arial Greek} 9 {}', justify='left', text='Reactant-1(adiab)')
        self.React_1_Label.place(anchor='nw', y='80')
        self.React_2_label = tk.Label(self.frame8)
        self.React_2_label.configure(compound='top', font='{Arial Greek} 9 {}', justify='center', text='Reactant-2(adiab)')
        self.React_2_label.place(anchor='nw', y='110')
        self.Prod_1_Label = tk.Label(self.frame8)
        self.Prod_1_Label.configure(compound='top', font='{Arial Greek} 9 {}', justify='center', text='Product-1(adiab)')
        self.Prod_1_Label.place(anchor='nw', y='170')
        self.Prod_2_Label = tk.Label(self.frame8)
        self.Prod_2_Label.configure(compound='top', font='{Arial Greek} 9 {}', justify='center', takefocus=False)
        self.Prod_2_Label.configure(text='Product-2(adiab)')
        self.Prod_2_Label.place(anchor='nw', y='200')
        self.label15 = tk.Label(self.frame8)
        self.label15.configure(compound='top', font='{Arial CE} 9 {}', justify='center', takefocus=False)
        self.label15.configure(text='Temperatura (K)')
        self.label15.place(anchor='nw', y='260')
        self.temp = tk.Entry(self.frame8)
        self.temp.configure(state='disabled')
        _text_ = '''298.15'''
        self.temp['state'] = 'normal'
        self.temp.delete('0', 'end')
        self.temp.insert('0', _text_)
        self.temp['state'] = 'disabled'
        self.temp.place(anchor='nw', width='80', x='130', y='260')
        self.bR1 = tk.Button(self.frame8)
        self.bR1.configure(text='Browse')
        self.bR1.place(anchor='nw', x='240', y='80')
        self.bR2 = tk.Button(self.frame8)
        self.bR2.configure(text='Browse')
        self.bR2.place(anchor='nw', x='240', y='110')
        self.bP1 = tk.Button(self.frame8)
        self.bP1.configure(text='Browse')
        self.bP1.place(anchor='nw', x='240', y='170')
        self.bP2 = tk.Button(self.frame8)
        self.bP2.configure(text='Browse')
        self.bP2.place(anchor='nw', x='240', y='140')
        self.label31 = tk.Label(self.frame8)
        self.label31.configure(compound='top', font='{Arial CE} 9 {}', justify='center', takefocus=False)
        self.label31.configure(text='Temperatura (K)')
        self.label31.place(anchor='nw', y='140')
        self.button11 = tk.Button(self.frame8)
        self.button11.configure(text='Browse')
        self.button11.place(anchor='nw', x='240', y='200')
        self.label32 = tk.Label(self.frame8)
        self.label32.configure(text='Tunneling')
        self.label32.place(anchor='nw', x='0', y='230')
        self.entry15 = tk.Entry(self.frame8)
        self.entry15.configure(state='disabled')
        self.entry15.place(anchor='nw', x='120', y='230')
        self.frame8.configure(height='400', width='300')
        self.frame8.place(anchor='nw', x='40', y='10')
        self.frame7.configure(height='200', width='200')
        self.frame7.place(anchor='nw', relheight='1.0', relwidth='1.0', relx='0.0', y='30')
        self.frame10 = tk.Frame(self.toplevel1)
        self.Difussion_Label = tk.Label(self.frame10)
        self.Difussion_Label.configure(compound='top', font='{Arial CE} 9 {}', justify='center', takefocus=False)
        self.Difussion_Label.configure(text='Do you want to consider diffusion? ')
        self.Difussion_Label.grid(column='1', row='0', sticky='w')
        self.YesDifussion = tk.Radiobutton(self.frame10)
        self.YesDifussion.configure(text='Yes')
        self.YesDifussion.grid(column='2', row='0', sticky='e')
        self.NoDifussion = tk.Radiobutton(self.frame10)
        self.NoDifussion.configure(text='No')
        self.NoDifussion.grid(column='3', row='0', sticky='e')
        self.frame10.configure(height='20', width='460')
        self.frame10.place(anchor='nw', width='350', x='30', y='360')
        self.frame14 = tk.Frame(self.toplevel1)
        self.tkinterscrolledtext2 = ScrolledText(self.frame14)
        self.tkinterscrolledtext2.configure(borderwidth='2')
        self.tkinterscrolledtext2.place(anchor='nw', height='300', width='300', x='0', y='60')
        self.button9 = tk.Button(self.frame14)
        self.button9.configure(text='Data is Ok, Run')
        self.button9.place(anchor='nw', x='260')
        self.label25 = tk.Label(self.frame14)
        self.label25.configure(cursor='arrow', justify='left', relief='raised', text='Rate constant units:\n-For bimolecular(M-1 s-1)\n -For unimolecular reactions(s-1)')
        self.label25.place(anchor='nw', x='10', y='400')
        self.label26 = tk.Label(self.frame14)
        self.label26.configure(cursor='based_arrow_down', justify='center', relief='groove', takefocus=False)
        self.label26.configure(text='Plese note that pH is not\nconsidered here.\n\nCheck for updates in \nthis topic')
        self.label26.place(anchor='nw', width='140', x='210', y='440')
        self.tkinterscrolledtext3 = ScrolledText(self.frame14)
        self.tkinterscrolledtext3.configure(borderwidth='2')
        self.tkinterscrolledtext3.place(anchor='nw', height='300', width='300', x='320', y='60')
        self.label27 = tk.Label(self.frame14)
        self.label27.configure(font='{Arial} 10 {bold}', text='OTHER CALCULATED DATA')
        self.label27.place(anchor='nw', x='40', y='30')
        self.label29 = tk.Label(self.frame14)
        self.label29.configure(font='{Arial} 10 {bold}', text='KINETIC DATA')
        self.label29.place(anchor='nw', x='390', y='30')
        self.button10 = tk.Button(self.frame14)
        self.button10.configure(text='Save')
        self.button10.place(anchor='nw', width='90', x='400', y='410')
        self.frame14.configure(height='200', width='200')
        self.frame14.place(anchor='nw', height='600', width='700', x='400', y='60')
        self.frame15 = tk.Frame(self.toplevel1)
        self.Cage = tk.Label(self.frame15)
        self.Cage.configure(compound='top', font='{Arial CE} 9 {}', justify='center', takefocus=False)
        self.Cage.configure(text='Cage Efects? ')
        self.Cage.grid(column='1', row='0', sticky='w')
        self.radiobutton3 = tk.Radiobutton(self.frame15)
        self.radiobutton3.configure(text='Yes')
        self.radiobutton3.grid(column='2', row='0', sticky='e')
        self.radiobutton4 = tk.Radiobutton(self.frame15)
        self.radiobutton4.configure(text='No')
        self.radiobutton4.grid(column='3', row='0', sticky='e')
        self.frame15.configure(height='20', width='460')
        self.frame15.place(anchor='nw', width='350', x='400', y='35')
        self.toplevel1.configure(height='600', width='1050')

        # Main widget
        self.mainwindow = self.toplevel1
    
    def run(self):
        self.mainwindow.mainloop()


if __name__ == '__main__':
    app = AApp()
    app.run()

